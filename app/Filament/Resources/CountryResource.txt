<?php

namespace App\Filament\Resources;

use App\Filament\Resources\CountryResource\Pages;
use App\Filament\Resources\CountryResource\RelationManagers;
use App\Models\Country;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class CountryResource extends Resource
{
    protected static ?string $model = Country::class;
    protected static ?string $navigationGroup = 'Quản lý chung'; // Nhóm điều hướng
    protected static ?string $navigationLabel = 'Quốc gia'; // Tiêu đề tiếng Việt

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';

    public static function form(Form $form): Form
    {
        return $form
        ->schema([
            Forms\Components\TextInput::make('name')
                ->label('Tên quốc gia')
                ->required()
                ->maxLength(255)
                ->live(255) // Theo dõi thay đổi trong real-time
                ->afterStateUpdated(function ($state, callable $set) {
                    $slug = \Illuminate\Support\Str::slug($state); // Tạo slug tự động
                    $set('slug', $slug);
                }),
            Forms\Components\TextInput::make('slug')
                ->label('Slug')
                ->required()
                ->maxLength(255)
                ->dehydrated() // Đảm bảo được lưu trong cơ sở dữ liệu
                ->unique(Country::class, 'slug', ignoreRecord: true), // Đảm bảo giá trị slug duy nhất
        ]);
    }

    public static function table(Table $table): Table
    {
        return $table
        ->columns([
            Tables\Columns\TextColumn::make('name')
                ->label('Tên quốc gia'),
            Tables\Columns\TextColumn::make('slug')
                ->label('Slug'),
        ])

            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListCountries::route('/'),
            'create' => Pages\CreateCountry::route('/create'),
            'edit' => Pages\EditCountry::route('/{record}/edit'),
        ];
    }
}
